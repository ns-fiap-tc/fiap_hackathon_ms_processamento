app:
  version: "@project.version@"
  build:
    timestamp: "@maven.build.timestamp@"

server:
  port: 8080

spring:
  application:
    name: "@project.artifactId@"
    description: "@project.description@"
  rabbitmq:
    exchange: app
    host: "${MESSAGE_QUEUE_HOST}"
    port: 5672
    username: guest
    password: guest
  data:
    mongodb:
      host: "${DB_HOST}"
      port: "${DB_PORT}"
      database: "${DB_NAME}"
      username: "${DB_USER}"
      password: "${DB_PASS}"
      authentication-database: admin
  cloud:
    openfeign:
      client:
        config:
          notificacao-service-client:
            url: "http://${NOTIFICACAO_SERVICE_CLIENT}/notificacao-service/v1"

rabbitmq:
  queue:
    consumer:
      messageQueue: uploadS3

logging:
  level:
    root: INFO

springdoc:
  swagger-ui:
    path: /swagger-ui.html
  api-docs:
    path: /api-docs

aws:
  region: "${AWS_REGION}"
  s3:
    bucket-name: "${AWS_S3_BUCKET_NAME}"

management:
  metrics:
    export:
      otlp:
        endpoint: http://otel-collector.observability.svc.cluster.local:4318/v1/metrics
        protocol: http/protobuf
        enabled: true
    tags:
      application: processamento-service
      service: ms-processamento
    distribution:
      percentiles-histograms: true
      minimum-expected-value:
        http.server.requests: 1ms
      maximum-expected-value:
        http.server.requests: 30s
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
    health:
      show-details: always
    metrics:
      enabled: true
    prometheus:
      enabled: true
